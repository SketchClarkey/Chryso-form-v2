# Kubernetes deployment configuration for Chryso Forms
apiVersion: v1
kind: Namespace
metadata:
  name: chryso-forms
---
# MongoDB StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: chryso-forms
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:7-jammy
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "admin"
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: password
        - name: MONGO_INITDB_DATABASE
          value: "chryso-forms-v2"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
# MongoDB Service
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: chryso-forms
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
---
# Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chryso-forms-app
  namespace: chryso-forms
spec:
  replicas: 2
  selector:
    matchLabels:
      app: chryso-forms-app
  template:
    metadata:
      labels:
        app: chryso-forms-app
    spec:
      containers:
      - name: app
        image: chryso-forms:latest
        ports:
        - containerPort: 5000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "5000"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: mongodb-uri
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: jwt-secret
        - name: JWT_REFRESH_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: jwt-refresh-secret
        - name: CLIENT_URL
          value: "https://chryso-forms.example.com"
        volumeMounts:
        - name: uploads
          mountPath: /app/apps/server/uploads
        - name: logs
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: false
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: uploads-pvc
      - name: logs
        emptyDir: {}
---
# Application Service
apiVersion: v1
kind: Service
metadata:
  name: chryso-forms-app
  namespace: chryso-forms
spec:
  selector:
    app: chryso-forms-app
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
  type: ClusterIP
---
# Persistent Volume Claim for uploads
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uploads-pvc
  namespace: chryso-forms
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chryso-forms-ingress
  namespace: chryso-forms
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  tls:
  - hosts:
    - chryso-forms.example.com
    secretName: chryso-forms-tls
  rules:
  - host: chryso-forms.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: chryso-forms-app
            port:
              number: 80
---
# Secrets (base64 encoded values)
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: chryso-forms
type: Opaque
data:
  password: cGFzc3dvcmQxMjM= # base64 encoded password
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
  namespace: chryso-forms
type: Opaque
data:
  mongodb-uri: bW9uZ29kYjovL2FkbWluOnBhc3N3b3JkMTIzQG1vbmdvZGI6MjcwMTcvY2hyeXNvLWZvcm1zLXYyP2F1dGhTb3VyY2U9YWRtaW4= # base64 encoded URI
  jwt-secret: eW91ci1zdXBlci1zZWNyZXQtand0LWtleQ== # base64 encoded secret
  jwt-refresh-secret: eW91ci1zdXBlci1zZWNyZXQtcmVmcmVzaC1rZXk= # base64 encoded refresh secret
---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: chryso-forms-hpa
  namespace: chryso-forms
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: chryso-forms-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80